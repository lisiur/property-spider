name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get version
        run: npm install -g toml && echo "::set-output name=version::$(node -p "require('toml').parse(require('fs').readFileSync('Cargo.toml').toString()).version")"
      - name: create release
        id: create-release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: PropertySpider v${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-apple-darwin
            archive: zip

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@master
      - uses: rust-build/rust-build.action@v1.4.0
        id: compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          TOOLCHAIN_VERSION: stable
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
      - name: upload artifact
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}
